# [PackageDev] target_format: plist, ext: tmLanguage
---
name: Bookjam Extensible Publication
scopeName: text.bxp
fileTypes: [sbml,sbss]
uuid: 8cca07e9-348a-4a91-b71e-baafc5f5cb0d

patterns:

- include: '#sbml-base-section'
- include: '#sbml-single-section'

- include: '#sbml-preview-end'
- include: '#sbml-object-inline'
- include: '#sbml-sub-inline'
- include: '#sbml-text-instyle'

- include: '#sbss-comment'
- include: '#sbss-name'
- include: '#sbss-if'

repository:

#for SBML

  sbml-base-section:
    name: entity.name.section.sbml
    begin: (^=begin)(\s+[^\s]+)?(\s+[^\n]+)?
    beginCaptures:
      '1': {name: entity.name.tag.sbml}
      '2': {name: string.definition.name.sbml}
      '3': {name: entity.other.attribute-name.sbml}
    end: (^=end)(\s+[^\s]+)?
    endCaptures:
      '1': {name: entity.name.tag.sbml}
      '2': {name: string.definition.name.sbml}
    patterns:
    - include: $self

  sbml-single-section:
    name: entity.name.section.sbml
    match: ^(=image|=object|=break|=import)(\s+[^\s]+)?(\s+[^\n]+)?
    captures:
      '1': {name: entity.name.tag.sbml}
      '2': {name: string.definition.name.sbml}
      '3': {name: entity.other.attribute-name.sbml}

  sbml-preview-end:
    name: entity.name.tag.sbml
    match: (=\(end\-of\-preview\)=)

  sbml-object-inline:
    name: entity.name.tag.inline.sbml
    begin: (=\([^\s]+)(\s+)([^\:]+\:)
    beginCaptures:
      '3': {name: string.definition.name.sbml}
    end: (\)=)
    patterns:
    - name: entity.other.attribute-name.sbml
      match: .

  sbml-sub-inline:
    name: entity.name.tag.inline.sbml
    begin: (=\([^\|]+\|)
    end: (\)=)
    patterns:
    - name: entity.other.attribute-name.sbml
      match: .  

  sbml-text-instyle:
    name: entity.name.section.inline.sbml
    begin: (=\[([^\|]+)\|)
    beginCaptures:
      '1': {name: entity.name.tag.inline.sbml}
      '2': {name: string.definition.name.sbml.bxp}
    end: (\]=)
    endCaptures:
      '1': {name: entity.name.tag.inline.sbml}
    patterns:
    - include: $self


#for SBSS

  sbss-comment:
    name: comment.line.sbss
    match: (\-{2,}.*\n?)

  sbss-name:
    name: string.definition.name.sbml
    begin: ([#%/][^\:]+\:)
    end: (\n)
    patterns:
    - include: '#style-set'

  sbss-if:
    name: keyword.control.condition.sbss
    begin: (if )
    end: (end)
    patterns:
    - include: $self
    - include: '#sbss-name'
    - include: '#var-set'



#Sets

  style-set:
    name: entity.other.attribute-name.sbss
    match: ([\s,]+)((
      action|adaptive|align|
      background-color|begin-new-page|border-width|border-color|border-radius|
      dim-color|display|
      filename|font-weight|font-family|font-style|font-size|font-no-scale|
      gravity|
      height|highlight-image|
      id|image|indent-width|
      line-break-mode|line-spacing|
      margin|margin-bottom|margin-top|margin-left|margin-right|
      padding|page-background-color|page-footer-hidden|page-side|pack|paragraph-spacing|position|
      scale-mode|select-mode|selected-image|style|
      text-decoration|text-justify|text-color|text-align|text-indent|type|
      width|
      vertical-align
      )\s?=)\s?([^,\n]+)
    captures:
      '4': {name: constant.character.value.style.sbss.bxp}

  var-set:
    name: storage.type.var.sbss
    match: (\$[^\s]+)
...
